{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Nombre de instancia de Data Factory",
			"defaultValue": "azltedatafactory"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"connectionString\"de \"AzureBlobStorage1\""
		},
		"SqlServer1_connectionString": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"connectionString\"de \"SqlServer1\""
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime2')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime3')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime4')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_qlk')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "data",
						"container": "adftutorial"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('SqlServer1_connectionString')]"
				},
				"connectVia": {
					"referenceName": "integrationRuntime2",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_qlk')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServer1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "TAX_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TAX_NAME",
						"type": "varchar"
					},
					{
						"name": "CONDITIONAL_OPERATOR",
						"type": "varchar"
					},
					{
						"name": "ID_RULE",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RULE_NAME",
						"type": "varchar"
					},
					{
						"name": "RULE_DESCRIPTION",
						"type": "varchar"
					},
					{
						"name": "ENTITY_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ENTITY_NAME",
						"type": "varchar"
					},
					{
						"name": "CRITERIA_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CRITERIA_NAME",
						"type": "varchar"
					},
					{
						"name": "CRITERIA_TYPE",
						"type": "varchar"
					},
					{
						"name": "CRITERIA_DESCRIPTION",
						"type": "varchar"
					},
					{
						"name": "CRITERIA_DEPENDENCY",
						"type": "text"
					},
					{
						"name": "ID_PREMISE",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NAME_PREMISE",
						"type": "varchar"
					},
					{
						"name": "DESCRIPTION_PREMISE",
						"type": "varchar"
					},
					{
						"name": "VARIABLE_PREMISE",
						"type": "varchar"
					},
					{
						"name": "LOGICAL_OPERATOR",
						"type": "varchar"
					},
					{
						"name": "VALUE_PREMISE",
						"type": "varchar"
					}
				],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServer1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_qlk')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_qlk",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT * FROM FN_GET_TAXRULE_DETAILS(2)",
								"partitionOption": "None"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"maxConcurrentConnections": 10,
									"blockSizeInMB": 50
								},
								"formatSettings": {
									"type": "JsonWriteSettings",
									"filePattern": "arrayOfObjects"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "TAX_ID",
											"type": "Int32"
										},
										"sink": {
											"path": "$['TAX_ID']"
										}
									},
									{
										"source": {
											"name": "TAX_NAME",
											"type": "String"
										},
										"sink": {
											"path": "$['TAX_NAME']"
										}
									},
									{
										"source": {
											"name": "CONDITIONAL_OPERATOR",
											"type": "String"
										},
										"sink": {
											"path": "$['CONDITIONAL_OPERATOR']"
										}
									},
									{
										"source": {
											"name": "ID_RULE",
											"type": "Int32"
										},
										"sink": {
											"path": "$['ID_RULE']"
										}
									},
									{
										"source": {
											"name": "RULE_NAME",
											"type": "String"
										},
										"sink": {
											"path": "$['RULE_NAME']"
										}
									},
									{
										"source": {
											"name": "RULE_DESCRIPTION",
											"type": "String"
										},
										"sink": {
											"path": "$['RULE_DESCRIPTION']"
										}
									},
									{
										"source": {
											"name": "ENTITY_ID",
											"type": "Int32"
										},
										"sink": {
											"path": "$['ENTITY_ID']"
										}
									},
									{
										"source": {
											"name": "ENTITY_NAME",
											"type": "String"
										},
										"sink": {
											"path": "$['ENTITY_NAME']"
										}
									},
									{
										"source": {
											"name": "CRITERIA_ID",
											"type": "Int32"
										},
										"sink": {
											"path": "$['CRITERIA_ID']"
										}
									},
									{
										"source": {
											"name": "CRITERIA_NAME",
											"type": "String"
										},
										"sink": {
											"path": "$['CRITERIA_NAME']"
										}
									},
									{
										"source": {
											"name": "CRITERIA_TYPE",
											"type": "String"
										},
										"sink": {
											"path": "$['CRITERIA_TYPE']"
										}
									},
									{
										"source": {
											"name": "CRITERIA_DESCRIPTION",
											"type": "String"
										},
										"sink": {
											"path": "$['CRITERIA_DESCRIPTION']"
										}
									},
									{
										"source": {
											"name": "CRITERIA_DEPENDENCY",
											"type": "String"
										},
										"sink": {
											"path": "$['CRITERIA_DEPENDENCY']"
										}
									},
									{
										"source": {
											"name": "ID_PREMISE",
											"type": "Int32"
										},
										"sink": {
											"path": "$['ID_PREMISE']"
										}
									},
									{
										"source": {
											"name": "NAME_PREMISE",
											"type": "String"
										},
										"sink": {
											"path": "$['NAME_PREMISE']"
										}
									},
									{
										"source": {
											"name": "DESCRIPTION_PREMISE",
											"type": "String"
										},
										"sink": {
											"path": "$['DESCRIPTION_PREMISE']"
										}
									},
									{
										"source": {
											"name": "VARIABLE_PREMISE",
											"type": "String"
										},
										"sink": {
											"path": "$['VARIABLE_PREMISE']"
										}
									},
									{
										"source": {
											"name": "LOGICAL_OPERATOR",
											"type": "String"
										},
										"sink": {
											"path": "$['LOGICAL_OPERATOR']"
										}
									},
									{
										"source": {
											"name": "VALUE_PREMISE",
											"type": "String"
										},
										"sink": {
											"path": "$['VALUE_PREMISE']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_qlk",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_qlk",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_qlk')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_qlk')]"
			]
		}
	]
}